//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteSistemaMatricula.RefTurmaService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Turma", Namespace="http://schemas.datacontract.org/2004/07/Sistema_de_Matricula.Models")]
    public partial class Turma : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RefTurmaService.ITurmaService")]
    public interface ITurmaService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITurmaService/Add", ReplyAction="http://tempuri.org/ITurmaService/AddResponse")]
        System.IAsyncResult BeginAdd(ClienteSistemaMatricula.RefTurmaService.Turma t, System.AsyncCallback callback, object asyncState);
        
        void EndAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITurmaService/Buscar", ReplyAction="http://tempuri.org/ITurmaService/BuscarResponse")]
        System.IAsyncResult BeginBuscar(string nome, System.AsyncCallback callback, object asyncState);
        
        ClienteSistemaMatricula.RefTurmaService.Turma EndBuscar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITurmaService/Remover", ReplyAction="http://tempuri.org/ITurmaService/RemoverResponse")]
        System.IAsyncResult BeginRemover(string nome, System.AsyncCallback callback, object asyncState);
        
        void EndRemover(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITurmaServiceChannel : ClienteSistemaMatricula.RefTurmaService.ITurmaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuscarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuscarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClienteSistemaMatricula.RefTurmaService.Turma Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClienteSistemaMatricula.RefTurmaService.Turma)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurmaServiceClient : System.ServiceModel.ClientBase<ClienteSistemaMatricula.RefTurmaService.ITurmaService>, ClienteSistemaMatricula.RefTurmaService.ITurmaService {
        
        private BeginOperationDelegate onBeginAddDelegate;
        
        private EndOperationDelegate onEndAddDelegate;
        
        private System.Threading.SendOrPostCallback onAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuscarDelegate;
        
        private EndOperationDelegate onEndBuscarDelegate;
        
        private System.Threading.SendOrPostCallback onBuscarCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoverDelegate;
        
        private EndOperationDelegate onEndRemoverDelegate;
        
        private System.Threading.SendOrPostCallback onRemoverCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TurmaServiceClient() : 
                base(TurmaServiceClient.GetDefaultBinding(), TurmaServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public TurmaServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(TurmaServiceClient.GetBindingForEndpoint(endpointConfiguration), TurmaServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public TurmaServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(TurmaServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public TurmaServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(TurmaServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public TurmaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Não é possível definiro CookieContainer. Verifique se que a ligação contém um Htt" +
                            "pCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCompleted;
        
        public event System.EventHandler<BuscarCompletedEventArgs> BuscarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoverCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClienteSistemaMatricula.RefTurmaService.ITurmaService.BeginAdd(ClienteSistemaMatricula.RefTurmaService.Turma t, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdd(t, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ClienteSistemaMatricula.RefTurmaService.ITurmaService.EndAdd(System.IAsyncResult result) {
            base.Channel.EndAdd(result);
        }
        
        private System.IAsyncResult OnBeginAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteSistemaMatricula.RefTurmaService.Turma t = ((ClienteSistemaMatricula.RefTurmaService.Turma)(inValues[0]));
            return ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).BeginAdd(t, callback, asyncState);
        }
        
        private object[] OnEndAdd(System.IAsyncResult result) {
            ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).EndAdd(result);
            return null;
        }
        
        private void OnAddCompleted(object state) {
            if ((this.AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAsync(ClienteSistemaMatricula.RefTurmaService.Turma t) {
            this.AddAsync(t, null);
        }
        
        public void AddAsync(ClienteSistemaMatricula.RefTurmaService.Turma t, object userState) {
            if ((this.onBeginAddDelegate == null)) {
                this.onBeginAddDelegate = new BeginOperationDelegate(this.OnBeginAdd);
            }
            if ((this.onEndAddDelegate == null)) {
                this.onEndAddDelegate = new EndOperationDelegate(this.OnEndAdd);
            }
            if ((this.onAddCompletedDelegate == null)) {
                this.onAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCompleted);
            }
            base.InvokeAsync(this.onBeginAddDelegate, new object[] {
                        t}, this.onEndAddDelegate, this.onAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClienteSistemaMatricula.RefTurmaService.ITurmaService.BeginBuscar(string nome, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuscar(nome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClienteSistemaMatricula.RefTurmaService.Turma ClienteSistemaMatricula.RefTurmaService.ITurmaService.EndBuscar(System.IAsyncResult result) {
            return base.Channel.EndBuscar(result);
        }
        
        private System.IAsyncResult OnBeginBuscar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nome = ((string)(inValues[0]));
            return ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).BeginBuscar(nome, callback, asyncState);
        }
        
        private object[] OnEndBuscar(System.IAsyncResult result) {
            ClienteSistemaMatricula.RefTurmaService.Turma retVal = ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).EndBuscar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuscarCompleted(object state) {
            if ((this.BuscarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuscarCompleted(this, new BuscarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuscarAsync(string nome) {
            this.BuscarAsync(nome, null);
        }
        
        public void BuscarAsync(string nome, object userState) {
            if ((this.onBeginBuscarDelegate == null)) {
                this.onBeginBuscarDelegate = new BeginOperationDelegate(this.OnBeginBuscar);
            }
            if ((this.onEndBuscarDelegate == null)) {
                this.onEndBuscarDelegate = new EndOperationDelegate(this.OnEndBuscar);
            }
            if ((this.onBuscarCompletedDelegate == null)) {
                this.onBuscarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuscarCompleted);
            }
            base.InvokeAsync(this.onBeginBuscarDelegate, new object[] {
                        nome}, this.onEndBuscarDelegate, this.onBuscarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClienteSistemaMatricula.RefTurmaService.ITurmaService.BeginRemover(string nome, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemover(nome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ClienteSistemaMatricula.RefTurmaService.ITurmaService.EndRemover(System.IAsyncResult result) {
            base.Channel.EndRemover(result);
        }
        
        private System.IAsyncResult OnBeginRemover(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nome = ((string)(inValues[0]));
            return ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).BeginRemover(nome, callback, asyncState);
        }
        
        private object[] OnEndRemover(System.IAsyncResult result) {
            ((ClienteSistemaMatricula.RefTurmaService.ITurmaService)(this)).EndRemover(result);
            return null;
        }
        
        private void OnRemoverCompleted(object state) {
            if ((this.RemoverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoverAsync(string nome) {
            this.RemoverAsync(nome, null);
        }
        
        public void RemoverAsync(string nome, object userState) {
            if ((this.onBeginRemoverDelegate == null)) {
                this.onBeginRemoverDelegate = new BeginOperationDelegate(this.OnBeginRemover);
            }
            if ((this.onEndRemoverDelegate == null)) {
                this.onEndRemoverDelegate = new EndOperationDelegate(this.OnEndRemover);
            }
            if ((this.onRemoverCompletedDelegate == null)) {
                this.onRemoverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoverCompleted);
            }
            base.InvokeAsync(this.onBeginRemoverDelegate, new object[] {
                        nome}, this.onEndRemoverDelegate, this.onRemoverCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ClienteSistemaMatricula.RefTurmaService.ITurmaService CreateChannel() {
            return new TurmaServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.EndTurma)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.EndTurma)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Turma/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return TurmaServiceClient.GetBindingForEndpoint(EndpointConfiguration.EndTurma);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return TurmaServiceClient.GetEndpointAddress(EndpointConfiguration.EndTurma);
        }
        
        private class TurmaServiceClientChannel : ChannelBase<ClienteSistemaMatricula.RefTurmaService.ITurmaService>, ClienteSistemaMatricula.RefTurmaService.ITurmaService {
            
            public TurmaServiceClientChannel(System.ServiceModel.ClientBase<ClienteSistemaMatricula.RefTurmaService.ITurmaService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAdd(ClienteSistemaMatricula.RefTurmaService.Turma t, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = t;
                System.IAsyncResult _result = base.BeginInvoke("Add", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Add", _args, result);
            }
            
            public System.IAsyncResult BeginBuscar(string nome, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nome;
                System.IAsyncResult _result = base.BeginInvoke("Buscar", _args, callback, asyncState);
                return _result;
            }
            
            public ClienteSistemaMatricula.RefTurmaService.Turma EndBuscar(System.IAsyncResult result) {
                object[] _args = new object[0];
                ClienteSistemaMatricula.RefTurmaService.Turma _result = ((ClienteSistemaMatricula.RefTurmaService.Turma)(base.EndInvoke("Buscar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemover(string nome, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nome;
                System.IAsyncResult _result = base.BeginInvoke("Remover", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemover(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Remover", _args, result);
            }
        }
        
        public enum EndpointConfiguration {
            
            EndTurma,
        }
    }
}
